version: '3.3'
services:
  db:
    container_name: "db"
    image: postgres:13.0-alpine
    restart: on-failure
    env_file:
      - ./.env
    volumes:
      - db_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432

  app:
    container_name: "app"
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/code/
    env_file:
      - ./.env
    ports:
      - 8000:8000
    depends_on:
      - db

volumes:
    db_data:

#  db:
#    container_name: "db"
#    image: postgres:13.0-alpine
#    restart: on-failure
#    env_file:
#      - ./.env
#    volumes:
#      - type: bind
#        source: ./db_data
#        target: /var/lib/postgresql/data
##    ports:
##      - "5432:5432"
#    networks:
#      bridge_net:
#        ipv4_address: ${DB_HOST}
#
#  app:
#    container_name: "app"
#    build: .
##    command:
##      - alembic revision --autogenerate -m "comment"
##      - alembic upgrade heads
##      - python ./main.py
#    restart: on-failure
#    env_file:
#      - ./.env
#    volumes:
#      - .:/app
#    depends_on:
#      - db
#    networks:
#      bridge_net:
#        ipv4_address: ${WEB_SRV_HOST}
#
#  nginx:
#    image: nginx:1.21.3-alpine
#    ports:
#      - "80:80"
#    volumes:
#      - type: bind
#        source: ./nginx/nginx.conf
#        target: /etc/nginx/conf.d/default.conf
#      - type: bind
#        source: ./nginx/proxy_params
#        target: /etc/nginx/proxy_params
#    depends_on:
#      - app
#    networks:
#      bridge_net:
#        ipv4_address: ${PROXY_HOST}
#
#networks:
#  bridge_net:
#    driver: bridge
#    ipam:
#      driver: default
#      config:
#       - subnet: ${SUBNET_ADDR}